{"version":3,"sources":["Components/home.js","App.js","index.js"],"names":["Home","props","configuration","Configuration","apiKey","openai","OpenAIApi","useState","openAiData","setOpenAiData","fetchData","value","createCompletion","model","prompt","temperature","max_tokens","response","data","choices","event","selectedVal","target","test","filteredString","substring","length","text","trim","trimmedChoices","removeSpecialChar","replace","useEffect","Container","className","Row","Form","Group","controlId","Control","as","rows","cols","onChange","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAMe,SAASA,EAAKC,GACzB,IAAMC,EAAgB,IAAIC,gBAAc,CACtCC,OAAQ,wDAEJC,EAAS,IAAIC,YAAUJ,GAE7B,EAAoCK,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAER,SAETC,EAAU,GAAD,4CAQvB,OARuB,kCAAxB,WAAyBC,GAAK,iGACLN,EAAOO,iBAAiB,CAC3CC,MAAO,mBACPC,OAAQH,EACRI,YAAa,EACbC,WAAY,IACX,KAAD,EALU,OAARC,EAAQ,yBAMLA,EAASC,KAAKC,SAAO,4CAC/B,sBAE0B,aAyB1B,OAzB0B,kCAA3B,WAA4BC,GAAK,yFACO,GAAhCC,EAAcD,EAAME,OAAOX,OAC9B,OAAOY,KAAKF,GAAa,CAAD,eAC8C,OAAjEG,EAAiBH,EAAYI,UAAU,EAAGJ,EAAYK,OAAS,GAAG,EAAD,OAC/ChB,EAAUc,GAAgB,KAAD,GAAzCL,EAAO,SACCA,EAAQ,IAAiC,KAA3BA,EAAQ,GAAGQ,KAAKC,OAEb,KADvBC,EAAiBV,EAAQ,GAAGQ,KAAKC,QACrBF,QACVI,EAAoBD,EAAeE,QAAQ,iBAAkB,IAKjEtB,EAJEqB,EAGWN,EAAgB,IAAIK,EAAe,IAFlCR,IAOhBZ,EADae,EAAgB,IAAIK,EAAe,KAIlDpB,EAAcY,GACf,uBAEHZ,EAAcW,EAAME,OAAOX,OAAM,6CAEpC,sBAED,OAvCAqB,qBAAU,WAAO,GAAG,IAwClB,cAACC,EAAA,EAAS,CAACC,UAAU,MAAK,SACxB,eAACC,EAAA,EAAG,WACF,oBAAID,UAAU,SAAQ,sCACtB,cAACE,EAAA,EAAI,UACH,cAACA,EAAA,EAAKC,MAAK,CAACH,UAAU,OAAOI,UAAU,+BAA8B,SACnE,cAACF,EAAA,EAAKG,QAAO,CAACC,GAAG,WAAWC,KAAM,GAAIC,KAAM,GAAIC,SAnCzD,SAE2B,GAAD,gCAkCfhC,MAAOH,YAOvB,C,MChDeoC,MAbf,WACE,OACE,qBAAKV,UAAU,MAAK,SAClB,cAAC,IAAM,UACL,eAAC,IAAM,WACL,cAAC,IAAK,CAACW,KAAK,IAAIC,QAAS,cAAC9C,EAAI,MAC9B,cAAC,IAAK,CAAC6C,KAAK,OAAOC,QAAS,cAAC9C,EAAI,YAK3C,ECbA+C,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.31cb7a9a.chunk.js","sourcesContent":["import React,{ useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport { Configuration, OpenAIApi } from 'openai';\n\nexport default function Home(props) {\n    const configuration = new Configuration({\n      apiKey: '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',\n    });\n    const openai = new OpenAIApi(configuration);\n\n    const [openAiData, setOpenAiData] = useState('');\n\n    useEffect(() => {}, []);\n    \n    async function fetchData(value) {\n      const response = await openai.createCompletion({\n          model: \"text-davinci-003\",\n          prompt: value,\n          temperature: 0,\n          max_tokens: 1,\n        });\n        return response.data.choices;\n    }\n    \n    async function handleChange(event) {\n      const selectedVal = event.target.value\n      if(/\\s+$/.test(selectedVal)) {\n        const filteredString = selectedVal.substring(0, selectedVal.length - 1);\n          const choices = await fetchData(filteredString);\n          if(choices && choices[0] && choices[0].text.trim() !== ''){\n            const trimmedChoices = choices[0].text.trim();\n            if(trimmedChoices.length === 1){\n              const removeSpecialChar = trimmedChoices.replace(/[^a-zA-Z0-9 ]/g, '');\n              if(!removeSpecialChar){\n                setOpenAiData(selectedVal)\n              }else{\n                const text = filteredString +' '+trimmedChoices+' ';\n                setOpenAiData(text)\n              }\n            }else{\n              const text = filteredString +' '+trimmedChoices+' ';\n              setOpenAiData(text)\n            }\n          }else{\n            setOpenAiData(selectedVal)\n          }\n      }else{\n        setOpenAiData(event.target.value)\n      }\n    }\n\n    return (\n      <Container className=\"p-3\">\n        <Row>\n          <h1 className=\"header\">Sentence Completion Game</h1>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Control as=\"textarea\" rows={10} cols={10} onChange={handleChange}\n                value={openAiData}/>\n            </Form.Group>\n          </Form>\n        </Row>\n      </Container>\n        \n    )\n}\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from \"./Components/home\"\n\nimport \"./app.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"home\" element={<Home />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}